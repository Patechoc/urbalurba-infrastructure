# file: /mnt/urbalurbadisk/manifests/036-prometheus-config.yaml
# Helm values for Prometheus (official chart) with OpenTelemetry integration
#
# Description:
# - Configures Prometheus server with persistent storage
# - Enables remote write endpoint for OpenTelemetry metrics
# - Adds scrape configuration for OpenTelemetry Collector
# - Resource-optimized for local development
#
# Usage:
#   helm upgrade --install prometheus prometheus-community/prometheus \
#     --namespace monitoring --create-namespace \
#     --values manifests/036-prometheus-config.yaml

# Prometheus server configuration
server:
  # Persistence configuration
  persistentVolume:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  
  # Resource configuration for local/dev clusters
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 512Mi
  
  # Prometheus server configuration
  configMapOverrideName: ""
  global:
    scrape_interval: 30s
    evaluation_interval: 30s
  
  # Remote write configuration for OpenTelemetry
  remoteWrite:
    - url: "http://localhost:9090/api/v1/write"  # Self-reference for testing
      remote_timeout: 30s
  
  # Additional scrape configurations for OpenTelemetry Collector
  extraScrapeConfigs: |
    - job_name: 'otel-collector'
      static_configs:
        - targets: ['otel-collector.monitoring.svc.cluster.local:8888']
      scrape_interval: 30s
      metrics_path: /metrics

# Service configuration
service:
  type: ClusterIP
  servicePort: 80
  # Expose the actual Prometheus port for remote write
  additionalPorts:
    - name: prometheus
      port: 9090
      targetPort: 9090
      protocol: TCP

# Alertmanager disabled for local development
alertmanager:
  enabled: false

# Pushgateway disabled for local development
pushgateway:
  enabled: false

# Kube-state-metrics configuration
kube-state-metrics:
  enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

# Node exporter configuration
prometheus-node-exporter:
  enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 24Mi
    limits:
      cpu: 100m
      memory: 48Mi

# Ingress configuration (disabled - using separate ingress file)
ingress:
  enabled: false