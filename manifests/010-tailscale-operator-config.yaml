# 010-tailscale-operator-config.yaml
# Installs Tailscale Kubernetes Operator with ingress functionality
# Usage: 
# installing: helm install tailscale-operator tailscale/tailscale-operator -n tailscale --create-namespace -f 010-tailscale-ingress.yaml \
#             --set-string oauth.clientId=$TAILSCALE_CLIENTID --set-string oauth.clientSecret=$TAILSCALE_CLIENTSECRET
# uninstalling: helm uninstall tailscale-operator -n tailscale
#
# The operator handles creation of Tailscale ingress resources for exposing your Kubernetes services
# After installation, create an Ingress resource with appropriate Tailscale annotations

# Enable HTTPS for tailnet services (required for Funnel)
experimental:
  enableTailscaleHTTPS: "true"  # As a string, not boolean - for consistency

# Disable API server proxy as we only need ingress functionality
apiServerProxyConfig:
  mode: "false"  # As a string, not boolean - this should fix the template error

# Configure operator and proxy settings
operatorConfig:
  hostname: "urbalurba-operator"  # Custom hostname for the operator
  tags: "tag:k8s-operator"  # Tag for the operator itself
  logging: "debug"          # Enable debug logging for troubleshooting - as string

# Default tags for proxies - adjust according to your ACL policy
proxyConfig:
  defaultTags: "tag:k8s"    # Tag for proxy nodes
  # Configure TCP keepalive settings to improve connection stability
  tcpKeepaliveEnabled: true  # This is a boolean value
  tcpKeepaliveIdleSec: 60    # This is a numeric value

# Note: To use this configuration, you must:
# 1. Have appropriate tag definitions in your tailnet policy file
# 2. Ensure nodeAttrs in your policy allow Funnel for tag:k8s
# 3. OAuth client credentials must be provided separately with --set flags
# 4. Have created an OAuth client with the required scopes (Devices Core and Auth Keys write)