---
# file: playbooks/03-copy-microk8s-config.yml
# Retrieve MicroK8s configuration files from the target host and copy them to the provision host.
# Usage: ansible-playbook playbooks/03-copy-microk8s-config.yml -e target_host="multipass-microk8s"

- name: 01 Define global variables
  hosts: localhost
  gather_facts: false
  vars:
    kubernetes_files_path: "/mnt/urbalurbadisk/kubeconfig"
  tasks:
    - name: 01.01 Check if target_host is provided
      ansible.builtin.fail:
        msg: "The target_host variable is not defined. Please provide it using -e target_host='your_host_name'"
      when: target_host is not defined

    - name: 01.02 Set facts for use in other plays
      ansible.builtin.set_fact:
        kubernetes_files_path: "{{ kubernetes_files_path }}"
        dashboard_token_file: "{{ target_host }}-dashboardtoken"
        microk8s_config_file: "{{ target_host }}-microk8s-config"
        host_kubeconf_file: "{{ kubernetes_files_path }}/{{ target_host }}-kubeconf"

    - name: 01.03 Add target host to in-memory inventory
      ansible.builtin.add_host:
        name: "{{ target_host }}"
        groups: target_group
        kubernetes_files_path: "{{ kubernetes_files_path }}"
        dashboard_token_file: "{{ dashboard_token_file }}"
        microk8s_config_file: "{{ microk8s_config_file }}"
        host_kubeconf_file: "{{ host_kubeconf_file }}"

- name: 02 Retrieve MicroK8s configuration files
  hosts: target_group
  become: true
  gather_facts: false
  vars:
    ansible_env:
      PATH: "/snap/bin:{{ ansible_env.PATH }}"

  tasks:
    - name: 02.01 Check MicroK8s status
      ansible.builtin.command: microk8s status --wait-ready
      register: microk8s_status
      changed_when: false
      failed_when: microk8s_status.rc != 0

    - name: 02.02 Ensure dashboard is enabled
      ansible.builtin.command: microk8s enable dashboard
      register: enable_dashboard
      changed_when: "'Enabling Kubernetes Dashboard' in enable_dashboard.stdout"
      failed_when:
        - enable_dashboard.rc != 0
        - "'already enabled' not in enable_dashboard.stderr"

    - name: Wait for dashboard to be ready
      ansible.builtin.command: microk8s kubectl wait --for=condition=available --timeout=600s deployment/kubernetes-dashboard -n kube-system
      changed_when: false

    - name: 02.03 Get the Token for dashboard
      ansible.builtin.shell: |
        set -o pipefail
        microk8s kubectl -n kube-system get secret microk8s-dashboard-token -o jsonpath='{.data.token}' | base64 -d
      args:
        executable: /bin/bash
      register: dashboard_token_output
      changed_when: false

    - name: 02.04 Ensure Kubernetes files directory exists on target host
      ansible.builtin.file:
        path: "{{ kubernetes_files_path }}"
        state: directory
        mode: "0755"

    - name: 02.05 Save dashboard token to file on target host
      ansible.builtin.copy:
        content: "{{ dashboard_token_output.stdout }}"
        dest: "{{ kubernetes_files_path }}/{{ dashboard_token_file }}"
        mode: "0644"

    - name: 02.06 Get MicroK8s config
      ansible.builtin.command: microk8s config
      register: microk8s_config
      changed_when: false

    - name: 02.07 Save MicroK8s config to a file on target host
      ansible.builtin.copy:
        content: "{{ microk8s_config.stdout }}"
        dest: "{{ kubernetes_files_path }}/{{ microk8s_config_file }}"
        mode: "0644"

    - name: 02.08 Get Tailscale IP
      ansible.builtin.command: tailscale ip -4
      register: tailscale_ip
      changed_when: false

    - name: 02.09 Set Tailscale IP fact
      ansible.builtin.set_fact:
        tailscale_ip: "{{ tailscale_ip.stdout }}"

- name: 03 Copy configuration files to provision-host
  hosts: localhost
  gather_facts: false
  vars:
    target_host: "{{ hostvars[groups['target_group'][0]]['inventory_hostname'] }}"
    tailscale_ip: "{{ hostvars[target_host]['tailscale_ip'] }}"
    kubernetes_files_path: "{{ hostvars[target_host]['kubernetes_files_path'] }}"
    dashboard_token_file: "{{ hostvars[target_host]['dashboard_token_file'] }}"
    microk8s_config_file: "{{ hostvars[target_host]['microk8s_config_file'] }}"
    host_kubeconf_file: "{{ hostvars[target_host]['host_kubeconf_file'] }}"

  tasks:
    - name: 03.01 Ensure Kubernetes files directory exists on provision-host
      ansible.builtin.file:
        path: "{{ kubernetes_files_path }}"
        state: directory
        mode: "0755"

    - name: 03.02 Fetch dashboard token from target host to provision-host
      ansible.builtin.fetch:
        src: "{{ kubernetes_files_path }}/{{ dashboard_token_file }}"
        dest: "{{ kubernetes_files_path }}/{{ dashboard_token_file }}"
        flat: true
      delegate_to: "{{ target_host }}"

    - name: 03.03 Fetch MicroK8s config from target host to provision-host
      ansible.builtin.fetch:
        src: "{{ kubernetes_files_path }}/{{ microk8s_config_file }}"
        dest: "{{ host_kubeconf_file }}"
        flat: true
      delegate_to: "{{ target_host }}"

    - name: 03.04 Update kubeconfig with Tailscale IP
      ansible.builtin.replace:
        path: "{{ host_kubeconf_file }}"
        regexp: 'server: https?://[^:]+'
        replace: "server: https://{{ tailscale_ip }}"

    - name: 03.05 Display kubeconfig location
      ansible.builtin.debug:
        msg: "Kubeconfig file was saved to: {{ host_kubeconf_file }}"

    - name: 03.06 Display dashboard token file location
      ansible.builtin.debug:
        msg: "Dashboard token file was saved to: {{ kubernetes_files_path }}/{{ dashboard_token_file }}"
