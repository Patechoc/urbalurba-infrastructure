---
# file: playbooks/net2-expose-tailscale-service.yml
# Description: Set up Tailscale funnel host for a specific Kubernetes service
#
# This playbook:
# 1. Verifies that the specified Kubernetes service exists
# 2. Automatically detects the service port if not specified
# 3. Creates a Tailscale funnel device for the service
# 4. Sets up a Traefik ingress rule to route traffic to the service
#
# Usage:
#   ansible-playbook playbooks/net2-expose-tailscale-service.yml 
#     -e service_name=SERVICE 
#     -e hostname=HOST 
#     -e namespace=NAMESPACE 
#     -e kubeconfig_path=PATH
#
# Required parameters:
#   service_name: Name of the Kubernetes service to expose
#
# Optional parameters:
#   hostname: Hostname to use for the Tailscale funnel (defaults to service_name)
#   namespace: Kubernetes namespace where the service is located (defaults to "default")
#   kubeconfig_path: Path to kubeconfig file (defaults to /mnt/urbalurbadisk/kubeconfig/kubeconf-all)
#   tailnet: Tailscale tailnet name (defaults to dog-pence)
#
# Related playbooks:
# - net2-setup-tailscale-cluster.yml: Must be run first to set up base infrastructure

- name: Set up Tailscale funnel host for a Kubernetes service
  hosts: localhost
  gather_facts: true
  vars:
    # Default values for parameters
    service_name: "{{ service_name }}"  # Required parameter
    hostname: "{{ hostname | default(service_name) }}"  # Default to service name if not specified
    namespace: "{{ namespace | default('default') }}"  # Default namespace is "default"
    kubeconfig_path: "{{ kubeconfig_path | default('/mnt/urbalurbadisk/kubeconfig/kubeconf-all') }}"
    manifests_folder: "/mnt/urbalurbadisk/manifests"
    tailnet: "{{ tailnet | default('dog-pence') }}"

  tasks:
    - name: "01 Validate required parameters"
      ansible.builtin.assert:
        that: 
          - service_name is defined
          - service_name | length > 0
        msg: "Parameter 'service_name' is required but not specified"

    - name: "02 Verify kubeconfig file exists"
      ansible.builtin.stat:
        path: "{{ kubeconfig_path }}"
      register: kubeconfig_stat

    - name: "03 Fail if kubeconfig file does not exist"
      ansible.builtin.fail:
        msg: "Kubeconfig file not found at {{ kubeconfig_path }}"
      when: not kubeconfig_stat.stat.exists

    - name: "04 Check if Tailscale operator namespace exists"
      kubernetes.core.k8s_info:
        kind: Namespace
        name: tailscale
        kubeconfig: "{{ kubeconfig_path }}"
      register: tailscale_ns
      ignore_errors: true

    - name: "05 Fail if Tailscale operator is not installed"
      ansible.builtin.fail:
        msg: "Tailscale operator namespace not found. Please install Tailscale operator first."
      when: tailscale_ns.resources is not defined or tailscale_ns.resources | length == 0

    - name: "06 Get service information"
      kubernetes.core.k8s_info:
        kind: Service
        name: "{{ service_name }}"
        namespace: "{{ namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"
      register: service_info
      ignore_errors: true

    - name: "07 Fail if service does not exist"
      ansible.builtin.fail:
        msg: "Service '{{ service_name }}' not found in namespace '{{ namespace }}'"
      when: service_info.resources is not defined or service_info.resources | length == 0

    - name: "08 Detect service port from the service definition"
      ansible.builtin.set_fact:
        service_port: "{{ service_info.resources[0].spec.ports[0].port | int }}"

    - name: "09 Print setup information"
      ansible.builtin.debug:
        msg: 
          - "Setting up Tailscale funnel for service '{{ service_name }}' in namespace '{{ namespace }}'"
          - "Using hostname: {{ hostname }}.{{ tailnet }}.ts.net"
          - "Service port: {{ service_port }}"

    - name: "10 Create temporary directory for generated manifests"
      ansible.builtin.tempfile:
        state: directory
        prefix: tailscale-host-
      register: temp_dir

    - name: "11 Generate Tailscale tunnel ingress manifest"
      ansible.builtin.template:
        src: "{{ manifests_folder }}/net2-tailscale-host-tunnel.yaml"
        dest: "{{ temp_dir.path }}/{{ hostname }}-tailscale-tunnel.yaml"
      vars:
        hostname: "{{ hostname }}"

    - name: "12 Apply Tailscale tunnel ingress"
      kubernetes.core.k8s:
        src: "{{ temp_dir.path }}/{{ hostname }}-tailscale-tunnel.yaml"
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
      register: tailscale_tunnel_result

    - name: "13 Generate Traefik service ingress manifest"
      ansible.builtin.template:
        src: "{{ manifests_folder }}/net2-tailscale-host-ingress.yaml"
        dest: "{{ temp_dir.path }}/{{ hostname }}-traefik-ingress.yaml"
      vars:
        hostname: "{{ hostname }}"
        service_name: "{{ service_name }}"
        namespace: "{{ namespace }}"
        port: "{{ service_port }}"
        tailnet: "{{ tailnet }}"

    - name: "14 Apply Traefik service ingress"
      kubernetes.core.k8s:
        src: "{{ temp_dir.path }}/{{ hostname }}-traefik-ingress.yaml"
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
      register: traefik_ingress_result

    - name: "15 Clean up temporary directory"
      ansible.builtin.file:
        path: "{{ temp_dir.path }}"
        state: absent
      when: temp_dir.path is defined

    - name: "16 Save ingress configuration for reference"
      ansible.builtin.copy:
        content: |
          # Tailscale funnel configuration for {{ hostname }}
          # Created on {{ ansible_date_time.date }} {{ ansible_date_time.time }}
          
          Service: {{ service_name }}
          Namespace: {{ namespace }}
          Port: {{ service_port }}
          Hostname: {{ hostname }}.{{ tailnet }}.ts.net
          
          # To remove this configuration:
          # ./net2-tailscale-host-setup.sh --remove {{ hostname }}
        dest: "/mnt/urbalurbadisk/tailscale-hosts/{{ hostname }}.conf"
        mode: '0644'
      ignore_errors: true

    - name: "17 Display completion message"
      ansible.builtin.debug:
        msg: 
          - "Tailscale funnel host setup completed."
          - ""
          - "Your service is now accessible at: https://{{ hostname }}.{{ tailnet }}.ts.net"
          - ""
          - "Note: It may take a few minutes for DNS to propagate and TLS certificates to be provisioned."
          - "You can check the status using: tailscale status"